@model puceAsk_dev1.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<div class="d-flex justify-content-center align-items-center " style="margin: 35px;">
    <div class="card" style=" width: 40rem;">
        <div class="card-header datos">
            <h2>Registro</h2>
         </div>
        <div class="card-body" align="center">
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <h4>Creación de cuenta.</h4>
                <hr />
                @Html.ValidationSummary("", new { @class = "text-danger" })

                <div class="row">
                    <div class="form-group col-md-5">
                        @Html.LabelFor(m => m.Foto, new { @class = "col control-label" })
                        <div class="col-md-4" id="divFileUpload">
                            <img src="https://img.icons8.com/cotton/64/000000/person-male--v2.png" alt="" class="imgSeleccionada" name="Foto"/> <br /> <br />
                            <input id="file" type="file" name="Foto" accept=".png,.jpg,.jpeg,.gif,.tif" onchange="showimagepreview(this)" style="color: transparent"/>

                        </div>
                    </div>

                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Nickname, new { @class = "col control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Nickname, new { @class = "form-control", @autocomplete = "off", pattern = ".{8,}" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "col control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @autocomplete = "off" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.FechaNacimiento, new { @class = "col control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.FechaNacimiento, new { @class = "form-control datepicker readonly", @autocomplete = "off", @readonly = "readonly" })

                            </div>

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Nombre, new { @class = "col control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", @autocomplete = "off" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Apellido, new { @class = "col control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Apellido, new { @class = "form-control", @autocomplete = "off" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Sexo, new { @class = "col control-label" })
                            <div class="col-md-10">
                                @Html.RadioButtonFor(m => m.Sexo, "false") Femenino
                                @Html.RadioButtonFor(m => m.Sexo, "true") Masculino

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Password, new { @class = "col control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @autocomplete = "off" })
                            </div>
                        </div>
                        <div class="form-group" typeof="date">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control ", @autocomplete = "off" })
                            </div>
                        </div>
                        
                    </div>

                    
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" class="btn btn-info datos" value="Registrarse" />
                    </div>
                </div>

            }
           </div>
        <div class="card-footer">
            <div class="d-flex justify-content-center links">
                ¿Ya tienes una cuenta? &nbsp; @Html.ActionLink("Inicia sesión", "Login", "Account")
            </div>
        </div>

        </div>
</div>
       
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>

    <script>
        $(document).ready(function () {
            $(".datepicker").datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true
            });


            $(".selector").datepicker({
                yearRange: "2002:2012"
            });
            var yearRange = $(".datepicker").datepicker("option", "yearRange");
            $(".datepicker").datepicker("option", "yearRange", "1900:2002");
        });
    </script>
<script>
        $(function () {
            $.validator.methods.date = function (value, element) {
                if ($.browser.webkit) {
                    var d = new Date();
                    return this.optional(element) || ! / Invalid | NaN /.test(new Date(d.toLocaleDateString(value)));
                }
                else {
                    return this.optional(element) || ! / Invalid | NaN /.test(new Date(value));
                }
            };
        });
</script>



   <script type="text/javascript">

       function showimagepreview(input) {

           if (input.files && input.files[0]) {
               var reader = new FileReader();
               reader.onload = function (e) {

                   document.getElementsByName("Foto")[0].setAttribute("src", e.target.result);
               }
               reader.readAsDataURL(input.files[0]);
           }
       }

</script>

}


<style>
    .datos {
        text-align: center !important;
    }

    .imgSeleccionada {
        vertical-align: middle;
        width: 150px;
        height: 150px;
        border-radius: 70%;
    }
</style>

