@model puceAsk_dev1.Models.Pregunta


<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li><a class="enlace" href="~/">Preguntas</a></li>  &nbsp; /  &nbsp;
        <li>@Html.ActionLink(Model.Categoria.NombreCategoria, "Inicio", null, new { categoria = Model.Categoria.NombreCategoria }, new { @class = "enlace" })</li> &nbsp; /  &nbsp;
        <li class=" breadcrumb-item active">@( Model.TituloPregunta)</li>
    </ol>
</nav>
<div class="container">
    <div class="card ">
        <div class="card-header titulo">
            <h4>@Html.DisplayFor(model => model.TituloPregunta) </h4>
        </div>

        <div class="card-body pregunta">
            <p class="lead preg">@Html.DisplayFor(model => model.DescPregunta)</p>
            <hr class="my-4">
            <p>
                @Html.DisplayFor(model => model.Fechapregunta) |
                @Html.DisplayFor(model => model.Categoria.NombreCategoria)
            </p>
        </div>
        @if (User.Identity.IsAuthenticated)
        {
            if ((bool)ViewData["Rusuario"] == true)
            {
                <div class="card-header titulo">
                    @Html.ActionLink("Responder", "Create", "Respuestas", new { id = Model.PreguntaId }, new { style = "color: white;" })
                </div>

            }

        }
    </div>

    <br />
    <hr />


    @if (Model.Respuestas.Count() > 0)
    {
        <h3>Respuestas</h3>

        foreach (var resp in Model.Respuestas)
        {
            string imgDataURL = "";
            if (resp.Usuario.Foto != null)
            {
                byte[] foto = resp.Usuario.Foto;
                string imreBase64Data = Convert.ToBase64String(foto);
                imgDataURL = string.Format("data:image/png;base64,{0}", imreBase64Data);
            }
            else
            {
                imgDataURL = "https://img.icons8.com/color/user";
            }
            if (Model.MejorUsuarioRespuestaId == resp.UsuarioId)
            {
                <div class="card respuesta order-0">
                    <div class="card-horizontal">
                        <div class="imgOver col-3">
                            <img class="embed-responsive hover" src="https://www.flaticon.com/svg/static/icons/svg/3791/3791551.svg" alt="Mejor Respuesta">
                            <img src="@imgDataURL" alt="foto" class="overlay foto" />
                        </div>
                        <div class="card-body col-9">
                            <h4 class="card-title">Autor: @(resp.Usuario.Nombre + " " + resp.Usuario.Apellido)</h4>
                            <p class="card-text">@resp.DescRespuesta</p>
                        </div>
                    </div>
                    <div class="card-footer">
                        <small class="text-muted">@resp.FechaPublicacion</small>
                    </div>
                </div>

            }
            else
            {
                <div class="card respuesta order-1">
                    <div class="row">
                        <div class="col-md-2">
                            <img alt="fotito" src="@imgDataURL" width="100" height="100" class="fotos" />
                        </div>
                        <div class="col">
                            <div class="container">
                                <p class="lead">@resp.DescRespuesta</p>
                                <hr class="my-4">
                                <p>
                                    Usuario: @resp.Usuario.Nombre
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    }

    else
    {
        <div class="card respuesta">
            No hay respuestas.
        </div>
    }
</div>
<br />
<div>
    <a href="javascript:void(0);" onclick="history.go(-1);" class="btn btn-danger">Regresar</a>
</div>

@{
    var cantidadPaginas = ViewBag.TotalPaginas;
    int inicial = 1;
    var radio = 2;
    var cantMaxPaginas = radio * 2 + 1;
    int final = (cantidadPaginas > cantMaxPaginas) ? cantMaxPaginas : cantidadPaginas;
    if (ViewBag.PaginaActual > radio + 1)
    {
        inicial = ViewBag.PaginaActual - radio;
        if (cantidadPaginas > ViewBag.PaginaActual + radio)
        {
            final = ViewBag.PaginaActual + radio;
        }
        else
        {
            final = cantidadPaginas;
        }
    }
}
<br />
<div class="pagination">
    <ul class="pagination">

        @if (ViewBag.TotalPaginas > 1)
        {
            <li>@Html.ActionLink("Primera", null, new { pagina = 1 }, new { @class = "list-group-item list-group-item-action" })</li>


            for (int i = inicial; i <= final; i++)
            {
                if (i == ViewBag.PaginaActual)
                {

                    <li class="active">@Html.ActionLink(i.ToString(), null, new { pagina = i }, new { @class = "list-group-item list-group-item-action active" })</li>
                }
                else
                {
                    <li>@Html.ActionLink(i.ToString(), null, new { pagina = i }, new { @class = "list-group-item list-group-item-action" })</li>
                }
            }
            <li>@Html.ActionLink("Última", null, new { pagina = cantidadPaginas }, new { @class = "list-group-item list-group-item-action" })</li>
        }
        else
        {
            int i = inicial;
            <li class="active">@Html.ActionLink(i.ToString(), null, new { pagina = i }, new { @class = "list-group-item list-group-item-action active" })</li>
        }
    </ul>
</div>

<style>

    .imgOver {
        position: relative;
        width: 50%;
    }

    .hover {
        display: block;
        position: center;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        width: 50%;
        height: auto;
    }

    .overlay {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        height: 100%;
        width: 100%;
        opacity: 0;
        transition: .5s ease;
        background-color: #008CBA;
    }

    .imgOver:hover .overlay {
        opacity: 1;
    }

    .foto {
        left: 50%;
        top: 50%;
        position: absolute;
        margin-top: -25px;
        margin-left: -25px;
        vertical-align: middle;
        width: 50px;
        height: 50px;
        border-radius: 50%;
    }

    .card-horizontal {
        display: flex;
        flex: 1 1 auto;
    }

    .pregunta {
        background-color: darkcyan;
        padding: 10px !important;
    }

    .titulo {
        color: white;
        background-color: #006666;
    }

    .preg {
        color: ghostwhite;
    }

    .respuesta {
        left: 5%;
        border: solid 1px;
        border-color: darkcyan;
        padding: 10px !important;
        margin-top: 15px;
        width: 95%;
    }

    .categorias {
        list-style: none;
    }

    .enlace {
        text-decoration: none !important;
        color: black;
    }

    .ver {
        text-decoration: none;
        color: #212529;
    }


    .fotos {
        vertical-align: middle;
        width: 120px;
        height: 120px;
        border-radius: 50%;
    }
    .list-group-item.list-group-item-action.active {
        background-color: darkcyan;
        border-color: cyan;
    }

    .list-group-item:hover {
        transform: scale(1.05);
        background-color: darkcyan;
        color: white;
        border-color: cyan;
        -moz-transition: all 0.2s ease-in;
        -ms-transition: all 0.2s ease-in;
        -o-transition: all 0.2s ease-in;
        transition: all 0.2s ease-in;
    }
    .pagination {
        display: compact !important;
        margin-right: auto !important;
        margin-left: auto !important;
    }
</style>