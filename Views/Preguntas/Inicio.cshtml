@model puceAsk_dev1.Models.PreguntasManager
{
    ViewBag.Title = "Inicio";
}

<div class="row">
    <div class="col-md-2">

        <h4>Categorías</h4>


        <div class="categorias list-group">

            @if (ViewData["categoria"].ToString() != "Todas")
            {
                @Html.ActionLink("Todas", "Inicio", null, null, new { @class = "list-group-item list-group-item-action" })
            }
            else
            {
                @Html.ActionLink("Todas", "Inicio", null, null, new { @class = "list-group-item list-group-item-action active" })
            }
            @foreach (var item in Model.categorias)
            {
                if (item.NombreCategoria == ViewData["categoria"].ToString())
                {
                    @Html.ActionLink(@item.NombreCategoria, "Inicio", null, new { categoria = item.NombreCategoria }, new { @class = "list-group-item list-group-item-action active" })
                }
                else
                {
                    @Html.ActionLink(@item.NombreCategoria, "Inicio", null, new { categoria = item.NombreCategoria }, new { @class = "list-group-item list-group-item-action" })
                }
            }

        </div>

    </div>

    <div class="col-md-10">
        <h2>Preguntas</h2> <br />

        @*Ver paginacion*@
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li>@Html.ActionLink("Preguntas", "Inicio", null, null, new { @class = "enlace" })</li> &nbsp; / &nbsp;
                <li>@Html.ActionLink(ViewData["categoria"].ToString(), "Inicio", null, new { categoria = ViewData["categoria"].ToString() }, new { @class = "enlace" })</li>
            </ol>
        </nav>


        <div class="row">

            <div class="col-md-6">
                <br />
                <button class="btn buscador" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample" style="padding: 8px">
                    Filtrar y ordenar <img src="https://img.icons8.com/ios-filled/50/000000/filter-and-sort.png" height="20" />
                </button>
            </div>


            <div class="col" align="right">
                <br />
                @Html.ActionLink("Agregar pregunta", "Create", null, new { @class = "link-button" })
            </div>

        </div>

        <form method="get" action=@Url.Action("Inicio", "Preguntas")>


            <div class="collapse" id="collapseExample">
                <div class="card card-body ">
                    <div class="row">
                        <div class="col-md-4">
                            Ordenar por: <hr />
                            <div class="form-check ">
                                <input class="form-check-input" type="radio" name="ordenar" id="inlineRadio1" value="titulo">
                                <label class="form-check-label" for="inlineRadio1">Título</label>
                            </div>
                            <div class="form-check ">
                                <input class="form-check-input" type="radio" name="ordenar" id="inlineRadio2" value="categoria">
                                <label class="form-check-label" for="inlineRadio3">Categoría</label>
                            </div>
                            <div class="form-check ">
                                <input class="form-check-input" type="radio" name="ordenar" id="inlineRadio3" value="antiguos">
                                <label class="form-check-label" for="inlineRadio3">Más antiguos</label>
                            </div>
                            <div class="form-check ">
                                <input class="form-check-input" type="radio" name="ordenar" id="inlineRadio4" value="Date">
                                <label class="form-check-label" for="inlineRadio3">Más recientes</label>
                            </div>
                        </div>

                        <div class="col-md-4">
                            Buscar: <hr />
                            <div class="form-group">
                                <input name="buscar" placeholder="Texto de búsqueda" type="text" />

                            </div>
                        </div>
                    </div>

                </div>
                <div class="card-footer">
                    <div class="col" align="right">
                        <button class="btn btn-outline-info boton" type="submit">Aplicar</button>
                    </div>
                </div>
            </div>


        </form>
        <br />

        @if (Model.preguntas.Count() > 0)
        {

            foreach (var item in Model.preguntas)
            {
                string imgDataURL = "";
                if (item.Usuario.Foto != null)
                {
                    byte[] foto = item.Usuario.Foto;
                    string imreBase64Data = Convert.ToBase64String(foto);
                    imgDataURL = string.Format("data:image/png;base64,{0}", imreBase64Data);
                }

                <div class="card carta" style="margin-top: 20px">

                    <a href="@Url.Action("Details", "Preguntas", new { id = item.PreguntaId })" class="card-block stretched-link text-decoration-none">
                        <div class="card-header titulo">

                            <h4>@Html.DisplayFor(modelItem => item.TituloPregunta) </h4>

                        </div>

                        <div class="card-body pregunta">
                            <p class="lead preg">@Html.DisplayFor(modelItem => item.DescPregunta)</p>
                            <hr>
                            <p class="detalles">
                                @Html.DisplayFor(modelItem => item.Fechapregunta) |
                                @if (item.Categoria != null)
                                {
                                    @Html.DisplayFor(motelItem => item.Categoria.NombreCategoria)
                                }

                            </p>

                            <p class="detalles">
                                Autor:
                                <img alt="Foto" src="@imgDataURL" width="100" height="100" class="fotos" />
                                @Html.DisplayFor(modelItem => item.Usuario.Nombre)
                            </p>
                        </div>
                    </a>
                </div>
            }
        }
        else
        {
            <div class="card pregunta">
                No hay preguntas de esa categoría.
            </div>
        }

        <br /> <br />
    </div>
    @{ 
        var cantidadPaginas = (int)Math.Ceiling((double)Model.TotalPaginas / Model.RegistrosPorPagina);



        int inicial = 1;
        var radio = 2;
        var cantMaxPaginas = radio * 2 + 1;
        int final = (cantidadPaginas > cantMaxPaginas) ? cantMaxPaginas : cantidadPaginas;
        if (Model.PaginaActual > radio + 1)
        {
            inicial = Model.PaginaActual - radio;
            if (cantidadPaginas > Model.PaginaActual + radio)
            {
                final = Model.PaginaActual + radio;
            }
            else
            {
                final = cantidadPaginas;
            }
        }
    }
<ul class="pagination">

    @if (Model.RegistrosCategoria > 2)//Cambiar a 20
    {
        <li>@Html.ActionLink("Primera", null, new { categoria = ViewData["categoria"].ToString(), pagina = 1 }, new { @class = "list-group-item list-group-item-action" })</li>


        for (int i = inicial; i <= final; i++)
        {
            if (i == Model.PaginaActual)
            {

                <li class="active">@Html.ActionLink(i.ToString(), null, new { categoria = ViewData["categoria"].ToString(), pagina = i }, new { @class = "list-group-item list-group-item-action active" })</li>
            }
            else
            {
                <li>@Html.ActionLink(i.ToString(), null, new { categoria = ViewData["categoria"].ToString(), pagina = i }, new { @class = "list-group-item list-group-item-action" })</li>
            }
        }
        <li>@Html.ActionLink("Última", null, new { categoria = ViewData["categoria"].ToString(), pagina = cantidadPaginas }, new { @class = "list-group-item list-group-item-action" })</li>
    }
    else
    {
        int i = inicial;
        <li class="active">@Html.ActionLink(i.ToString(), null, new { categoria = ViewData["categoria"].ToString(), pagina = i }, new { @class = "list-group-item list-group-item-action active" })</li>
    }
</ul>
</div>

<style>
    .pregunta {
        background-color: darkcyan;
        padding: 10px !important;
    }

    .titulo {
        color: white;
        background-color: #006666;
        color: ghostwhite;
    }

    .enlaces {
        background-color: #006666;
        color: ghostwhite;
    }

    .preg {
        color: ghostwhite;
    }

    .respuesta {
        left: 5%;
        border: solid 1px;
        border-color: darkcyan;
        padding: 10px !important;
        margin-top: 15px;
        width: 95%;
    }

    .categorias {
        list-style: none;
    }

    .link-button {
        -moz-border-radius: 0.333em 0.333em 0.333em 0.333em;
        -moz-box-shadow: 0 1px 4px rgba(0, 0, 0, 0.4);
        background-color: #FFBB33;
        border-color: #FFBB33;
        border-style: solid;
        border-width: 1px;
        color: white;
        cursor: pointer;
        display: inline-block;
        font-size: 1.167em;
        font-weight: bold;
        line-height: 1.429em;
        padding: 0.286em 1em 0.357em;
        text-decoration: none !important;
    }


    .enlaces {
        text-decoration: none !important;
    }


    .ver {
        text-decoration: none;
        color: #212529;
    }

    .enlaces:hover {
        color: white;
    }


    .carta:hover {
        transform: scale(1.05);
        background: #fff;
        box-shadow: 0px 15px 26px rgba(0, 0, 0, 0.50);
        box-shadow: 0px 15px 26px rgba(0, 0, 0, 0.50);
        webkit-transition: all 0.2s ease-in;
        moz-transition: all 0.2s ease-in;
        ms-transition: all 0.2s ease-in;
        -o-transition: all 0.2s ease-in;
        transition: all 0.2s ease-in;
        margin-top: 50px;
    }

    .detalles {
        color: black;
    }

    .enlace {
        text-decoration: none !important;
        color: black;
    }

    .buscador {
        padding-top: 2px;
        padding-bottom: 5px;
        padding-left: 5px;
        padding-right: 5px;
        margin-bottom: 4px;
        border-color: darkcyan;
    }

    .fotos {
        vertical-align: middle;
        width: 30px;
        height: 30px;
        border-radius: 50%;
    }

    .boton {
        background-color: darkcyan;
        color: white;
    }

    .list-group-item.list-group-item-action.active {
        background-color: darkcyan;
        border-color: cyan;
    }

    .list-group-item:hover {
        transform: scale(1.05);
        background-color: darkcyan;
        color: white;
        border-color: cyan;
        -moz-transition: all 0.2s ease-in;
        -ms-transition: all 0.2s ease-in;
        -o-transition: all 0.2s ease-in;
        transition: all 0.2s ease-in;
    }
    .pagination {
        display: compact;
        margin-right: auto;
        margin-left: auto;
    }
</style>
