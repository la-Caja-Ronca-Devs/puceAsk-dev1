@model puceAsk_dev1.Models.ApplicationUser

@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm("Edit", "Usuarios", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="d-flex justify-content-center align-items-center " style="margin: 35px;">
        <div class="card" style=" width: 40rem;">
            <div class="card-header datos">
                <h2>Editar usuario</h2>
            </div>
            <div class="card-body" align="center">

                <div class="row">
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.EmailConfirmed)
                    @Html.HiddenFor(model => model.PasswordHash)
                    @Html.HiddenFor(model => model.SecurityStamp)
                    @Html.HiddenFor(model => model.PhoneNumber)
                    @Html.HiddenFor(model => model.PhoneNumberConfirmed)
                    @Html.HiddenFor(model => model.TwoFactorEnabled)
                    @Html.HiddenFor(model => model.LockoutEndDateUtc)
                    @Html.HiddenFor(model => model.LockoutEnabled)
                    @Html.HiddenFor(model => model.AccessFailedCount)
                    @Html.HiddenFor(model => model.SaldoCuenta)
                    @Html.HiddenFor(model => model.UserName)

                    <div class="form-group col-md-5">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "control-label " })
                            <div class="col-md-10">
                                <div class="input-group" id="divFileUpload">
                                    <img src="@ViewBag.fotografia" alt="" class="imgSeleccionada" name="Foto" /> <br /> <br />
                                    @Html.TextBoxFor(model => model.Foto, new { @id = "file", @type = "file", @name = "img", @accept = ".png,.jpg,.jpeg,.gif,.tif", @onchange = "showimagepreview(this)", style = "color: transparent" })
                                </div><br />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label " })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control datepicker readonly", @autocomplete = "off", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label " })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Sexo, new { @class = "col control-label" })
                            <div class="col-md-10">
                                @Html.RadioButtonFor(model => model.Sexo, "false") Femenino
                                @Html.RadioButtonFor(model => model.Sexo, "true") Masculino

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="card-footer">
                <div class="" align="left">
                    @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-danger" })
                    <input type="submit" value="Guardar" class="btn btn-primary" style="background-color:darkcyan; border-color:darkcyan" />
                    
                </div>

            </div>


        </div>
    </div>
}
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>

    <script>
        $(document).ready(function () {
            $(".datepicker").datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true
            });


            $(".selector").datepicker({
                yearRange: "2002:2012"
            });
            var yearRange = $(".datepicker").datepicker("option", "yearRange");
            $(".datepicker").datepicker("option", "yearRange", "1900:2002");
        });
    </script>

    <script>
        $(function () {
            $.validator.methods.date = function (value, element) {
                if ($.browser.webkit) {
                    var d = new Date();
                    return this.optional(element) || ! / Invalid | NaN /.test(new Date(d.toLocaleDateString(value)));
                }
                else {
                    return this.optional(element) || ! / Invalid | NaN /.test(new Date(value));
                }
            };
        });
    </script>

    <script type="text/javascript">

        function showimagepreview(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {

                    document.getElementsByName("Foto")[0].setAttribute("src", e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

    </script>
}

<style>
    .imgSeleccionada {
        vertical-align: middle;
        width: 150px;
        height: 150px;
        border-radius: 70%;
    }
</style>
