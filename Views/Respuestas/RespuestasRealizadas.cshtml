@model IEnumerable<puceAsk_dev1.Models.Respuesta>

<div class="container">


        <div class="col" align="right">
            <br />
            <a href="@Url.Action("Inicio", "Preguntas")" class="btn btn-warning"> <img src="https://img.icons8.com/ios-filled/100/000000/faq.png" height="20" />&nbsp; Responder alguna pregunta</a>

        </div>

    <hr />
    <div>
        @if (Model.Count() > 0)
        {

            foreach (var item in Model)
            {

                <div class="card carta" style="margin-top: 20px">
                    <div class="card-header titulo">
                        <div class="container">
                            <div class="row">
                               
                                    <div class="col-7">
                                        @Html.DisplayFor(modelItem => item.Pregunta.TituloPregunta)
                                    </div>
                                    <div class="col-3">

                                        @if (item.Pregunta.MejorUsuarioRespuestaId == item.UsuarioId)
                                        {
                                            <div class="row">
                                                <span class="badge badge-pill badge-info">Mejor Respuesta</span>
                                            </div>
                                        }

                                        @if (DateTime.Now <= item.Pregunta.Fechapregunta.AddDays(5))
                                        {
                                            <div class="row">
                                                <span class="badge badge-primary">Abierta por @((item.Pregunta.Fechapregunta.AddDays(5) - DateTime.Now).Days) días más.</span>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="row">
                                                <span class="badge badge-secondary">Cerrada</span>
                                            </div>
                                        }
                                    </div>
                                    <div class="btn-group" style="flex-flow:row">
                                        @if (DateTime.Now <= item.Pregunta.Fechapregunta.AddDays(5))
                                        {
                                            <div>
                                                <a href="@Url.Action("Edit", "Respuestas", new { id = item.PreguntaId })" class="btn btn-primary btn-sm"> Editar</a>
                                            </div>
                                        }
                                        <div>
                                            <a href="@Url.Action("Details", "Preguntas", new { id = item.PreguntaId })" class="btn btn-secondary btn-sm"> Ver</a>
                                        </div>
                                    </div>

                                </div>

                        </div>


                    </div>

                    <div class="card-body pregunta">
                        <p class="lead preg">@Html.DisplayFor(modelItem => item.Pregunta.DescPregunta)</p>
                        <hr>
                        <p class="detalles">
                            @Html.DisplayFor(modelItem => item.Pregunta.Fechapregunta) |
                            @if (item.Pregunta.Categoria != null)
                            {
                                @Html.DisplayFor(motelItem => item.Pregunta.Categoria.NombreCategoria)
                            }

                        </p>
                        <p class="detalles">

                            @{ string imgDataURL = "";
                                if (item.Pregunta.Usuario.Foto != null)
                                {
                                    byte[] foto = item.Pregunta.Usuario.Foto;
                                    string imreBase64Data = Convert.ToBase64String(foto);
                                    imgDataURL = string.Format("data:image/png;base64,{0}", imreBase64Data);
                                }
                                else
                                {
                                    imgDataURL = "https://img.icons8.com/color/user";
                                }
                            }


                            Autor: <img src="@imgDataURL" alt="foto" width="100" height="100" class="fotos" /> @Html.DisplayFor(modelItem => item.Pregunta.Usuario.UserName)
                        </p>

                    </div>
                    <div class="card-footer">
                        <h5>Mi Respuesta:</h5>
                        <h6>@item.DescRespuesta</h6>
                    </div>

                </div>
            }
        }
        else
        {
            <div class="card pregunta">
                No se han encontrado preguntas.
            </div>
        }

    </div>
    <br />
    <div>
        @Html.ActionLink("Regresar", "Inicio", "Preguntas", null, new { @class = "btn btn-danger", @role = "button" })
    </div>

</div>
@{
    var cantidadPaginas = ViewBag.TotalPaginas;
    int inicial = 1;
    var radio = 2;
    var cantMaxPaginas = radio * 2 + 1;
    int final = (cantidadPaginas > cantMaxPaginas) ? cantMaxPaginas : cantidadPaginas;
    if (ViewBag.PaginaActual > radio + 1)
    {
        inicial = ViewBag.PaginaActual - radio;
        if (cantidadPaginas > ViewBag.PaginaActual + radio)
        {
            final = ViewBag.PaginaActual + radio;
        }
        else
        {
            final = cantidadPaginas;
        }
    }
}
<br />
<div class="pagination">
    <ul class="pagination">

        @if (ViewBag.TotalPaginas > 1)
        {
            <li>@Html.ActionLink("Primera", null, new { pagina = 1 }, new { @class = "list-group-item list-group-item-action" })</li>


            for (int i = inicial; i <= final; i++)
            {
                if (i == ViewBag.PaginaActual)
                {

                    <li class="active">@Html.ActionLink(i.ToString(), null, new { pagina = i }, new { @class = "list-group-item list-group-item-action active" })</li>
                }
                else
                {
                    <li>@Html.ActionLink(i.ToString(), null, new { pagina = i }, new { @class = "list-group-item list-group-item-action" })</li>
                }
            }
            <li>@Html.ActionLink("Última", null, new { pagina = cantidadPaginas }, new { @class = "list-group-item list-group-item-action" })</li>
        }
        else
        {
            int i = inicial;
            <li class="active">@Html.ActionLink(i.ToString(), null, new { pagina = i }, new { @class = "list-group-item list-group-item-action active" })</li>
        }
    </ul>
</div>
<style>

    .fotos {
        vertical-align: middle;
        width: 30px;
        height: 30px;
        border-radius: 50%;
    }

    .pregunta {
        background-color: darkcyan;
        padding: 10px !important;
    }

    .titulo {
        color: white;
        background-color: #006666;
        color: ghostwhite;
    }

    .preg, .enlaces {
        color: ghostwhite;
    }

    .respuesta {
        left: 5%;
        border: solid 1px;
        border-color: darkcyan;
        padding: 10px !important;
        margin-top: 15px;
        width: 95%;
    }

    .categorias {
        list-style: none;
    }

    .link-button {
        -moz-border-radius: 0.333em 0.333em 0.333em 0.333em;
        -moz-box-shadow: 0 1px 4px rgba(0, 0, 0, 0.4);
        background-color: #FFBB33;
        border-color: #FFBB33;
        border-style: solid;
        border-width: 1px;
        color: white;
        cursor: pointer;
        display: inline-block;
        font-size: 1.167em;
        font-weight: bold;
        line-height: 1.429em;
        padding: 0.286em 1em 0.357em;
        text-decoration: none !important;
    }

    .enlaces {
        text-decoration: none !important;
    }

    .ver {
        text-decoration: none;
        color: #212529;
    }

    .enlaces:hover {
        color: white;
    }

    .carta:hover {
        transform: scale(1.05);
        background: #fff;
        box-shadow: 0px 15px 26px rgba(0, 0, 0, 0.50);
        /box-shadow: 0px 15px 26px rgba(0, 0, 0, 0.50);
        / -webkit-transition: all 0.2s ease-in;
        -moz-transition: all 0.2s ease-in;
        -ms-transition: all 0.2s ease-in;
        -o-transition: all 0.2s ease-in;
        transition: all 0.2s ease-in;
        margin-top: 50px;
    }

    .detalles {
        color: black;
    }

    .enlace {
        text-decoration: none !important;
        color: black;
    }

    .list-group-item.list-group-item-action.active {
        background-color: darkcyan;
        border-color: cyan;
    }

    .list-group-item:hover {
        transform: scale(1.05);
        background-color: darkcyan;
        color: white;
        border-color: cyan;
        -moz-transition: all 0.2s ease-in;
        -ms-transition: all 0.2s ease-in;
        -o-transition: all 0.2s ease-in;
        transition: all 0.2s ease-in;
    }
    
    .pagination {
        display: compact !important;
        margin-right: auto !important;
        margin-left: auto !important;
    }
</style>

